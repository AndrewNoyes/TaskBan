<Page
    x:Class="TamedTasks.Views.Pages.ProjectBoardsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:util="using:TamedTasks.Util"
    xmlns:converters="using:Template10.Converters"
    xmlns:boardsCtrls="using:TamedTasks.Views.Boards"
    xmlns:projects="using:TamedTasks.Views.Projects"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:TamedTasks.Views.Behaviors"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:pages="using:taskban_universal.ViewModels.Pages"
    mc:Ignorable="d">

    <Page.DataContext>
        <pages:ProjectBoardsPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <Page.Resources>
        <util:IntToBooleanConverter x:Key="IntToBooleanConverter"/>
        <util:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ValueWhenConverter x:Key="CollapsedWhenNullConverter" When="{x:Null}">
            <converters:ValueWhenConverter.Value>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>
        <converters:ValueWhenConverter x:Key="NotBooleanToVisibilityConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>
        <DataTemplate x:Name="TaskListTemplate">
            <Grid CornerRadius="4"
                  BorderThickness=".5"
                  Width="300"
                  Background="#EEEEEE"
                  x:Name="TaskListContainer"
                  VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid x:Name="TaskListHeader">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Padding="5"
                              Grid.Row="0"
                              Grid.RowSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="16"
                                       Text="{Binding TaskList.Title, UpdateSourceTrigger=PropertyChanged}"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       TextWrapping="Wrap"/>
                            <TextBlock FontSize="16"
                                       FontWeight="SemiLight"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Text="{Binding TaskItemViewModels.Count, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <ToggleButton Grid.Column="1"
                                      Grid.Row="0"
                                      Background="Transparent"
                                      Margin="10,0,0,0"
                                      BorderBrush="Transparent"
                                      IsChecked="{Binding EditTaskListVisible, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <SymbolIcon Symbol="Edit"/>
                        </ToggleButton>
                        <Button Grid.Row="0"
                                Grid.Column="2"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Click="OnClearList">
                            <SymbolIcon Symbol="Remove"/>
                        </Button>
                    </Grid>
                    <Grid Visibility="{Binding EditTaskListVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Grid.Row="1"
                          BorderBrush="DimGray"
                          BorderThickness="0,0,0,0.1"
                          Padding="5"
                          Background="#EEEEEE">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <TextBox Header="title"
                                     Text="{Binding TaskList.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     TextWrapping="Wrap"/>
                            <TextBox IsSpellCheckEnabled="True"
                                     TextWrapping="Wrap"
                                     Header="description"
                                     Text="{Binding TaskList.Description, Mode=TwoWay}"/>
                        </StackPanel>
                        <Grid Grid.Row="1"
                              Margin="0,5,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Background="Transparent">
                                <SymbolIcon Symbol="Delete"/>
                            </Button>
                            <Button Command="{Binding UpdateTaskListCommand}"
                                    Background="Transparent"
                                    Grid.Column="4">
                                <SymbolIcon Symbol="Save"/>
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
                <ListView ItemsSource="{Binding TaskItemViewModels, UpdateSourceTrigger=PropertyChanged}"
                          SelectionMode="None"
                          AllowDrop="True"
                          CanReorderItems="True"
                          CanDragItems="True"
                          Grid.Row="1"
                          IsItemClickEnabled="True"
                          DragOver="OnListDragOver"
                          Drop="OnListDrop"
                          DragItemsStarting="OnDragItemsStarting"
                          MinHeight="50"
                          x:Name="TaskListView"
                          Background="#EEEEEE"
                          ItemClick="OnTaskClick">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignPaper}"/>
                            <Setter Property="Margin" Value="5" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:Name="TaskListItemTemplate">
                            <Grid Padding="5"
                                  CornerRadius="4"
                                  PointerEntered="OnEnter"
                                  PointerExited="OnExit">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <controls1:MarkdownTextBlock Text="{Binding TaskItem.Title}"
                                                             TextWrapping="Wrap"
                                                             IsTextSelectionEnabled="False"/>
                                <StackPanel Orientation="Horizontal"
                                            FlowDirection="RightToLeft"
                                            Padding="0,5,0,0"
                                            Grid.Row="1"
                                            Visibility="{Binding ChecklistViewModel.HasChecklist, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="{Binding ChecklistViewModel.ChecklistItems.Count}"
                                               FontSize="12"
                                               VerticalAlignment="Center"/>
                                    <TextBlock Text="/"
                                               FontSize="12"
                                               VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ChecklistViewModel.CompleteChecklistItems}"
                                               VerticalAlignment="Center"
                                               FontSize="12"
                                               Margin="0,0,5,0"/>
                                    <SymbolIcon Symbol="Accept"
                                                Foreground="#4CAF50"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Grid.Row="2"
                      Visibility="{Binding AddTaskVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Padding="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox Text="{Binding NewTaskTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap"
                             IsEnabled="{Binding AddTaskVisible}"
                             PlaceholderText="task title..."
                             KeyDown="OnTaskTitleKeyDown"
                             IsEnabledChanged="OnTaskTitleEnabledChanged"
                             x:Name="NewTitleBox"/>
                    <StackPanel Grid.Row="1"
                                Margin="0,5,0,5"
                                Orientation="Horizontal"
                                FlowDirection="RightToLeft">
                        <Button Command="{Binding SaveTaskCommand}"
                                Background="Transparent">
                            <SymbolIcon Symbol="Save"/>
                        </Button>
                        <Button Margin="0,0,5,0"
                                Background="Transparent"
                                Command="{Binding ShowTaskCommand}">
                            <SymbolIcon Symbol="Cancel"/>
                        </Button>
                    </StackPanel>
                </Grid>
                <StackPanel Orientation="Horizontal"
                            FlowDirection="LeftToRight"
                            HorizontalAlignment="Right"
                            Grid.Row="3"
                            Margin="0,5,0,0">
                    <ToggleButton IsChecked="{Binding AddTaskVisible, Mode=TwoWay}"
                                  Visibility="{Binding AddTaskVisible, Converter={StaticResource NotBooleanToVisibilityConverter}}"
                                  Background="Transparent">
                        <SymbolIcon Symbol="Add"/>
                    </ToggleButton>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <!-- Visual state management -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="pageHeader" 
                             Content="Boards"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             EllipsisVisibility="Collapsed">
            <!--<controls:PageHeader.PrimaryCommands>
                <AppBarToggleButton Icon="More"
                                    IsChecked="True"
                                    x:Name="ToggleBoards"/>
                -->
            <!-- TODO: checked state should be stored -->
            <!--
            </controls:PageHeader.PrimaryCommands>-->
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Icon="Find"
                              Label="Search"/>
            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>

        <!-- Task lists hub -->
        <Grid RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.Below="pageHeader">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Pivot Grid.Column="0"
                   Grid.Row="0"
                   Grid.RowSpan="2"
                   ItemsSource="{Binding SelectedProjectViewModel.BoardViewModels}"
                   x:Name="PivotControl"
                   SelectionChanged="OnPivotSelectionChanged">
                <Pivot.HeaderTemplate>
                    <DataTemplate x:Name="PivotHeaderTemplate">
                        <TextBlock Text="{Binding Board.Title}"
                                   Foreground="White"/>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <Pivot.ItemTemplate>
                    <DataTemplate x:Name="PivotItemTemplate">
                        <PivotItem Background="{Binding Background, UpdateSourceTrigger=PropertyChanged}"
                                   BorderBrush="{Binding Background, UpdateSourceTrigger=PropertyChanged}"
                                   x:Name="PivotItem"
                                   VerticalContentAlignment="Stretch"
                                   Margin="-12,0,-12,0">
                            <ListView ScrollViewer.HorizontalScrollMode="Enabled" 
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ScrollViewer.VerticalScrollMode="Disabled"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      ItemsSource="{Binding TaskListViewModels}"
                                      ItemTemplate="{StaticResource TaskListTemplate}"
                                      SelectionMode="None"
                                      IsItemClickEnabled="False"
                                      Background="{Binding Background, UpdateSourceTrigger=PropertyChanged}"
                                      BorderBrush="{Binding Background, UpdateSourceTrigger=PropertyChanged}"
                                      x:Name="BoardListView">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <ListViewItemPresenter PointerOverBackground="Transparent" 
                                                                           Margin="5,0,5,0"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate x:Name="ItemsPanelTemplate">
                                        <ItemsStackPanel Orientation="Horizontal" x:Name="ItemsStackPanel"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                            </ListView>
                        </PivotItem>
                    </DataTemplate>
                </Pivot.ItemTemplate>
            </Pivot>

            <CommandBar Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource MaterialDesignPaper}">
                <CommandBar.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </CommandBar.Style>
                <CommandBar.Content>

                    <ComboBox ItemsSource="{Binding ProjectViewModels}"
                              SelectedItem="{Binding SelectedProjectViewModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MinWidth="100"
                              Margin="0,0,0,10">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Project.Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </CommandBar.Content>

                <AppBarSeparator/>
                <AppBarButton Icon="Add" Label="Add">
                    <AppBarButton.Flyout>
                        <Flyout x:Name="AddFlyout">
                            <Grid MinWidth="100">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Add a..."/>
                                <Button Content="project"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        Margin="0,5,0,0"
                                        Click="OnNewProject"/>
                                <Button Content="board"
                                        Grid.Row="2"
                                        Background="Transparent"
                                        HorizontalAlignment="Stretch"
                                        Margin="0,5,0,0"
                                        Click="OnNewBoard"/>
                                <Button Content="list"
                                        Grid.Row="3"
                                        Background="Transparent"
                                        HorizontalAlignment="Stretch"
                                        Margin="0,5,0,0"
                                        Click="OnNewTaskList"/>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton Icon="ViewAll" Label="View All"/>
            </CommandBar>

            <!-- List actions -->
            <!--<StackPanel Grid.Row="2"
                        Grid.Column="0"
                        Orientation="Horizontal"
                        FlowDirection="LeftToRight"
                        Background="{Binding BoardsListViewModel.Background}"
                        Padding="10">
                <Button Command="{Binding AddListCommand}"
                        Style="{StaticResource MaterialDesignRaisedAccentButton}"
                        Click="OnNewTaskList">
                    <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="Add"/>
                        <TextBlock Text="ADD LIST"
                                   Margin="5,0,0,0"/>
                    </StackPanel>
                </Button>
            </StackPanel>-->
        </Grid>
    </RelativePanel>
</Page>
